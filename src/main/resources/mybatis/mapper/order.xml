<?xml version="1.0" encoding="UTF-8"?>
<!-- 
작성자 : 김종진
작성일 : 230809
 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skkcandle.dao.OrderDao">
	<!-- orderdetail 테이블로부터 유저 id를 통해 orderlist 받아오기 -->
	<select id="selectOrdersByUserId" parameterType="int" resultMap="orderDetailMap">
	    select p.productName, p.productPrice, p.productId, o.quantity 
	    from ORDERDETAIL o inner join product p on o.productId = p.productId
	    where userId = #{userId}
	</select>
	<resultMap id="orderDetailMap" type="java.util.HashMap">
	    <result column="productName" property="productName"/>
	    <result column="productPrice" property="productPrice"/>
	    <result column="productId" property="productId"/>
	    <result column="quantity" property="quantity"/>
	</resultMap>
	
	<!-- orderinfo에 값을 넣는 과정 -->
	<insert id="insertOrderInfo" parameterType="Order">
		<selectKey keyProperty="orderId" resultType="int" order="BEFORE">
			select order_seq.nextval from dual <!-- 시퀀스의 다음 번호를 가지고온다. 그리고 다음단계=>세팅하기 -->
		</selectKey>
		insert into orderinfo (orderId, userId, orderDate, orderStatus, shippingAddress, accountTransfer, creditCard, phone, withoutBankbook, checked )
		values(#{orderId}, #{userId}, sysdate, '배송준비중', #{shippingAddress}, #{accountTransfer},#{creditCard},#{phone},#{withoutBankbook},'no')
	</insert>
	
	<!-- orderDetail에 방금 주문한 내역들만 저장하기 위해 orderId를 받아오는 과정1 -->
	<select id="getOrderId" parameterType="int" resultType="int">
		select orderId from orderinfo where userId = #{userId} and checked ='no' 
	</select>
	<!-- orderDetail에 방금 주문한 내역들만 저장하기 위해 orderId를 받아오는 과정2 -->
	<update id="changeCheck" parameterType="int">
		update orderinfo set checked ='yes' where orderId = #{orderId}
	</update>
	
	<insert id="insertOrderDetail" parameterType="OrderDetail">
		insert into orderDetail (userId, productId, orderId, quantity)
		values(#{userId},#{productId},#{orderId},#{quantity})
	</insert>
	
	<!-- 결제리스트를 위해 모든 정보를 받아오자 -->
	<select id="getOrderInfo" parameterType="Pager" resultType="Order">
		<![CDATA[
			SELECT rnum, orderId, userId, orderDate, orderStatus, shippingAddress, arriveDate 
			FROM ( SELECT rownum rnum, orderId, userId, orderDate, orderStatus, shippingAddress, arriveDate 
			    FROM ( SELECT orderId, userId, orderDate, orderStatus, shippingAddress, arriveDate 
			        FROM ORDERINFO WHERE USERID = #{userId} ORDER BY ORDERID DESC ) 
			    WHERE ROWNUM <=#{endRowNo} ) 
			WHERE rnum >=#{startRowNo} 
		]]>
	</select>
	<select id="getOrderDetailByOrderId" parameterType="int" resultType="OrderDetail">
		select productId, quantity from orderDetail where orderId = #{orderId} order by orderId desc
	</select>
	<!-- 결제리스트 페이징을 위해 총 결제 횟수 가져오기 -->
	<select id="getOrderCount" parameterType="int" resultType="int">
		select count(*) from orderinfo where userId = #{userId}
	</select>
	
	
	
</mapper>
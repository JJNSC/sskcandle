<?xml version="1.0" encoding="UTF-8"?>
<!-- 
작성자 : 김종진
작성일 : 230809
 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.skkcandle.dao.OrderDao">
	<!-- orderdetail 테이블로부터 유저 id를 통해 orderlist 받아오기 -->
	<!-- <select id="selectOrdersByUserId" parameterType="int" resultMap="orderDetailMap">
	    select p.productName, p.productPrice, p.productId, o.quantity 
	    from ORDERDETAIL o inner join product p on o.productId = p.productId
	    where userId = #{userId}
	</select>
	<resultMap id="orderDetailMap" type="java.util.HashMap">
	    <result column="productName" property="productName"/>
	    <result column="productPrice" property="productPrice"/>
	    <result column="productId" property="productId"/>
	    <result column="quantity" property="quantity"/>
	</resultMap> -->
	
	<!-- orderinfo에 값을 넣는 과정 -->
	<insert id="insertOrderInfo" parameterType="Order">
		<selectKey keyProperty="orderId" resultType="int" order="BEFORE">
			select order_seq.nextval from dual <!-- 시퀀스의 다음 번호를 가지고온다. 그리고 다음단계=>세팅하기 -->
		</selectKey>
		insert into orderinfo (orderId, userId, orderDate, orderStatus, shippingPostcode,shippingRoadAddress,shippingDetailAddress, accountTransfer, creditCard, phone, withoutBankbook, checked )
		values(#{orderId}, #{userId}, sysdate, '배송준비중', #{shippingPostcode},#{shippingRoadAddress},#{shippingDetailAddress}, #{accountTransfer},#{creditCard},#{phone},#{withoutBankbook},'no')
	</insert>
	
	<!-- orderDetail에 방금 주문한 내역들만 저장하기 위해 orderId를 받아오는 과정1 -->
	<select id="getOrderId" parameterType="int" resultType="int">
		select orderId from orderinfo where userId = #{userId} and checked ='no' 
	</select>
	<!-- orderDetail에 방금 주문한 내역들만 저장하기 위해 orderId를 받아오는 과정2 -->
	<update id="changeCheck" parameterType="int">
		update orderinfo set checked ='yes' where orderId = #{orderId}
	</update>
	
	<insert id="insertOrderDetail" parameterType="OrderDetail">
		insert into orderDetail (userId, productId, orderId, quantity, review)
		values(#{userId},#{productId},#{orderId},#{quantity},1)
	</insert>
	
	<!-- 결제리스트를 위해 모든 정보를 받아오자 -->
	<select id="getOrderInfo" parameterType="Pager" resultType="Order">
		<![CDATA[
			SELECT rnum, orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress,shippingDetailAddress, arriveDate 
			FROM ( 
				SELECT rownum rnum, orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress,shippingDetailAddress, arriveDate 
			    FROM ( 
			    	SELECT orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress,shippingDetailAddress, arriveDate 
			        FROM ORDERINFO 
			        
			        WHERE USERID = #{userId} ORDER BY ORDERID DESC ) 
			    WHERE ROWNUM <=#{endRowNo}
			) 
			WHERE rnum >=#{startRowNo} 
		]]>
	</select>
	<!-- 결제리스트 검색어가 있을경우 -->
	<select id="getOrderInfoBySearchword" parameterType="Pager" resultType="Order">
		<![CDATA[
		select rnum, productName , orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress, shippingDetailAddress, arriveDate
		from
		    (select rownum rnum, p.productName , ab.orderId, ab.userId, ab.orderDate, ab.orderStatus, ab.shippingPostcode, ab.shippingRoadAddress, ab.shippingDetailAddress, ab.arriveDate from product p
		        inner join
		        (select od.productId ,a.rnum, a.orderId, a.userId, a.orderDate, a.orderStatus, a.shippingPostcode, a.shippingRoadAddress, a.shippingDetailAddress, a.arriveDate from orderdetail od
		            inner join
		            (SELECT rnum, orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress,shippingDetailAddress, arriveDate 
		                        FROM (                   
		                            SELECT rownum rnum, orderId, userId, orderDate, orderStatus, shippingPostcode, shippingRoadAddress,shippingDetailAddress, arriveDate 
		                            FROM ORDERINFO 
		                            WHERE USERID = #{userId} ORDER BY ORDERID DESC ) 
		                       ) a
		            on od.orderid = a.orderid ORDER BY a.ORDERID DESC) ab 
		        on p.productId = ab.productId where
		                ]]>
		                <if test="searchWord != null and searchWord != ''">
		                    ( p.productName like '%' || #{searchWord} || '%') and
		                </if>
		                <![CDATA[
		        ROWNUM <=#{endRowNo} ORDER BY ab.ORDERID DESC)
		    where rnum >=#{startRowNo} 
		    ]]>
	</select>
	
	<select id="getOrderDetailByOrderId" parameterType="int" resultType="OrderDetail">
		select productId, quantity, review, orderId from orderDetail where orderId = #{orderId} order by orderId desc
	</select>
	<!-- 결제리스트 페이징을 위해 총 결제 횟수 가져오기 -->
	<select id="getOrderCount" parameterType="int" resultType="int">
		select count(*) from orderinfo where userId = #{userId}
	</select>
	<!-- 검색단어가 있을시 결제리스트 페이징을 위해 총 결제 횟수 가져오기 -->
	<select id="getOrderCountBySearchword" parameterType="Order" resultType="int">
		select count(*) from product p 
		    inner join (
		    select oi.orderId, oi.userId, od.productId from orderinfo oi
		        inner join orderDetail od on oi.orderId = od.orderId ) o
		    on p.productid = o.productId
		where userId = #{userId} and productName like '%' || #{productName} || '%'
	</select>
	
	<!-- 리뷰작성하면 orderDetail의 review의 값이 1->2 로변환하는것 -->
	<update id="reviewedOrder" parameterType="OrderDetail">
		update orderDetail set review = 2 where userId=#{userId} and productId=#{productId} and orderId=#{orderId}
	</update>
	
	
	
</mapper>